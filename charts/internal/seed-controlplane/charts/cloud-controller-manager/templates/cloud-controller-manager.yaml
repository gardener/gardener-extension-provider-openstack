apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloud-controller-manager
  namespace: {{ .Release.Namespace }}
  labels:
    app: kubernetes
    role: cloud-controller-manager
spec:
  revisionHistoryLimit: 1
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: kubernetes
      role: cloud-controller-manager
  template:
    metadata:
{{- if .Values.podAnnotations }}
      annotations:
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
      labels:
        garden.sapcloud.io/role: controlplane
        gardener.cloud/role: controlplane
        app: kubernetes
        role: cloud-controller-manager
        networking.gardener.cloud/to-dns: allowed
        networking.gardener.cloud/to-public-networks: allowed
        networking.gardener.cloud/to-private-networks: allowed
        networking.gardener.cloud/to-shoot-apiserver: allowed
        networking.gardener.cloud/from-prometheus: allowed
{{- if .Values.podLabels }}
{{ toYaml .Values.podLabels | indent 8 }}
{{- end }}
    spec:
      containers:
      - name: openstack-cloud-controller-manager
        image: {{ index .Values.images "cloud-controller-manager" }}
        imagePullPolicy: IfNotPresent
        command:
        - /bin/openstack-cloud-controller-manager
        - --allocate-node-cidrs=true
        - --cloud-provider=openstack
        - --cloud-config=/etc/kubernetes/cloudprovider/cloudprovider.conf
        - --cluster-cidr={{ .Values.podNetwork }}
        - --cluster-name={{ .Values.clusterName }}
        - --concurrent-service-syncs=10
        - --configure-cloud-routes=true
        {{- include "cloud-controller-manager.featureGates" . | trimSuffix "," | indent 8 }}
        - --kubeconfig=/var/lib/cloud-controller-manager/kubeconfig
        - --leader-elect=true
        - --secure-port={{ include "cloud-controller-manager.port" . }}
        - --port=0
        - --authentication-kubeconfig=/var/lib/cloud-controller-manager/kubeconfig
        - --authorization-kubeconfig=/var/lib/cloud-controller-manager/kubeconfig
        - --tls-cert-file=/var/lib/cloud-controller-manager-server/cloud-controller-manager-server.crt
        - --tls-private-key-file=/var/lib/cloud-controller-manager-server/cloud-controller-manager-server.key
        - --tls-cipher-suites={{ .Values.tlsCipherSuites | join "," }}
        - --use-service-account-credentials
        {{- range $userAgentHeader := .Values.userAgentHeaders }}
        - --user-agent={{ $userAgentHeader }}
        {{- end }}
        - --v=2
        livenessProbe:
          httpGet:
            path: /healthz
            scheme: HTTPS
            port: {{ include "cloud-controller-manager.port" . }}
          successThreshold: 1
          failureThreshold: 2
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 15
        ports:
        - containerPort: {{ include "cloud-controller-manager.port" . }}
          name: metrics
          protocol: TCP
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        {{- if .Values.resources }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        {{- end }}
        volumeMounts:
        - name: cloud-controller-manager
          mountPath: /var/lib/cloud-controller-manager
        - name: cloud-controller-manager-server
          mountPath: /var/lib/cloud-controller-manager-server
        - name: cloud-provider-config
          mountPath: /etc/kubernetes/cloudprovider
        # Host certificates are mounted to accommodate OpenStack endpoints that might be served with a certificate
        # signed by a CA that is not globally trusted.
        - name: usr-share-ca-certificates
          mountPath: /usr/share/ca-certificates
          readOnly: true
        - name: etc-ssl
          mountPath: /etc/ssl
          readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      volumes:
      - name: cloud-controller-manager
        secret:
          secretName: cloud-controller-manager
      - name: cloud-controller-manager-server
        secret:
          secretName: cloud-controller-manager-server
      - name: cloud-provider-config
        secret:
          secretName: cloud-provider-config
      # Host certificates are mounted to accommodate OpenStack endpoints that might be served with a certificate
      # signed by a CA that is not globally trusted.
      - name: usr-share-ca-certificates
        hostPath:
          path: /usr/share/ca-certificates
      - name: etc-ssl
        hostPath:
          path: /etc/ssl
