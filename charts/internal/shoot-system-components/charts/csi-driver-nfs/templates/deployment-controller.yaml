---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: csi-driver-nfs-controller
  namespace: {{ .Release.Namespace }}
  labels:
    app: csi
    role: driver-nfs-controller
spec:
  replicas: {{ .Values.controller.replicas }}
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: csi
      role: driver-nfs-controller
  strategy:
    type: Recreate # needed to release liveness probe port on host (if new pod is created on same host)
  template:
    metadata:
{{- if .Values.controller.podAnnotations }}
      annotations:
{{ toYaml .Values.controller.podAnnotations | indent 8 }}
{{- end }}
      labels:
        app: csi
        role: driver-nfs-controller
    spec:
      priorityClassName: system-node-critical
      hostNetwork: true  # controller also needs to mount nfs to create dir
      dnsPolicy: {{ .Values.dnsPolicy }}
      serviceAccountName: csi-driver-nfs-controller
      containers:
        - name: driver-nfs-controller
          image: {{ index .Values.images "csi-driver-nfs" }}
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
            allowPrivilegeEscalation: true
          args:
            - "--v=5"
            - "--nodeid=$(NODE_ID)"
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--drivername=nfs.csi.k8s.io"
            - "--mount-permissions={{ .Values.driver.mountPermissions }}"
            - "--working-mount-dir={{ .Values.controller.workingMountDir }}"
          env:
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
          ports:
            - containerPort: {{ .Values.controller.livenessProbe.healthPort }}
              name: healthz
              protocol: TCP
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 30
            timeoutSeconds: 10
            periodSeconds: 30
{{- if .Values.resources.driverController }}
          resources:
{{ toYaml .Values.resources.driverController | indent 12 }}
{{- end }}
          volumeMounts:
            - name: pods-mount-dir
              mountPath: /var/lib/kubelet/pods
              mountPropagation: "Bidirectional"
            - mountPath: /csi
              name: socket-dir

        - name: csi-provisioner
          image: {{ index .Values.images "csi-provisioner" }}
          args:
            - "-v=2"
            - "--csi-address=$(ADDRESS)"
            - "--leader-election"
            - "--leader-election-namespace={{ .Release.Namespace }}"
            - "--extra-create-metadata=true"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
{{- if .Values.resources.provisioner }}
          resources:
{{ toYaml .Values.resources.provisioner | indent 12 }}
{{- end }}

        - name: csi-liveness-probe
          image: {{ index .Values.images "csi-liveness-probe" }}
          args:
            - --csi-address=/csi/csi.sock
            - --probe-timeout=3s
            - --health-port={{ .Values.controller.livenessProbe.healthPort }}
            - --v=2
{{- if .Values.resources.livenessProbe }}
          resources:
{{ toYaml .Values.resources.livenessProbe | indent 12 }}
{{- end }}
          volumeMounts:
            - name: socket-dir
              mountPath: /csi

      volumes:
        - name: pods-mount-dir
          hostPath:
            path: /var/lib/kubelet/pods
            type: Directory
        - name: socket-dir
          emptyDir: {}
